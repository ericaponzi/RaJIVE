library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
head(AllData)
str(AllData)
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration))
}
merge(summarydata, x, by = 'ids')
df <- merge(summarydata, x, by = 'ids')
View(df)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
options(digits = 2)
# load libraries
library(dplyr)
library(MASS)
library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
head(AllData)
str(AllData)
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration))
}
df <- merge(summarydata, x, by = 'ids')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
options(digits = 2)
# load libraries
library(dplyr)
library(MASS)
library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration))
}
df <- merge(summarydata, x, by = 'ids')
View(df)
i <- 1
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
options(digits = 2)
# load libraries
library(dplyr)
library(MASS)
library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration))
}
df <- merge(summarydata, x, by = 'ids')
ggplot(df, aes(count, fill = group)) +
geom_histogram(binwidth=.5, position="dodge")+
labs(title="Seizures per day in chronic phase",x="seizures per day", y = "")
View(df)
count
df$count
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
options(digits = 2)
# load libraries
library(dplyr)
library(MASS)
library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration))
}
df <- merge(summarydata, x, by = 'ids')
df$count
df$group
df$group <- as.factor(df$group)
ggplot(df, aes(count, fill = group)) +
geom_histogram(binwidth=.5, position="dodge")+
labs(title="Seizures per day in chronic phase",x="seizures per day", y = "")
modelfreq <- glmer(formula = count ~ group + duration + (1|id),
family="poisson", data=df)
modelfreq <- glmer(formula = count ~ group + duration + (1|ids),
family="poisson", data=df)
summary(modelfreq)
mean(df[df$group == 1, ]$count)
mean(df[df$group == 2, ]$count)
modelfreq <- glmer(formula = count ~ group + duration + (1|ids),
family="poisson", data=df[df$count >0, ])
summary(modelfreq)
df[df$count >0, ]
cbind(mean, median, sd)
mean <- mean(df[df$group == 1, ]$count), mean(df[df$group == 2, ]$count)
mean <- c(mean(df[df$group == 1, ]$count), mean(df[df$group == 2, ]$count))
median <- c(median(df[df$group == 1, ]$count), median(df[df$group == 2, ]$count))
sd <- c(sd(df[df$group == 1, ]$count), sd(df[df$group == 2, ]$count))
group <- c('group1', 'group2')
cbind(mean, median, sd)
mean <- c(mean(df[df$group == 1, ]$count), mean(df[df$group == 2, ]$count))
median <- c(median(df[df$group == 1, ]$count), median(df[df$group == 2, ]$count))
sd <- c(sd(df[df$group == 1, ]$count), sd(df[df$group == 2, ]$count))
group <- c('group1', 'group2')
rbind(group, mean, median, sd)
mean <- c(mean(df[df$group == 1, ]$count), mean(df[df$group == 2, ]$count))
median <- c(median(df[df$group == 1, ]$count), median(df[df$group == 2, ]$count))
sd <- c(sd(df[df$group == 1, ]$count), sd(df[df$group == 2, ]$count))
group <- c('group1', 'group2')
cbind(group, mean, median, sd)
mean <- c(mean(df[df$group == 1, ]$count), mean(df[df$group == 2, ]$count))
median <- c(median(df[df$group == 1, ]$count), median(df[df$group == 2, ]$count))
sd <- c(sd(df[df$group == 1, ]$count), sd(df[df$group == 2, ]$count))
group <- c(1,2)
cbind(group, mean, median, sd)
df1 <- df[df$count >0, ]
mean <- c(mean(df1[df1$group == 1, ]$count), mean(df1[df1$group == 2, ]$count))
median <- c(median(df1[df1$group == 1, ]$count), median(df1[df1$group == 2, ]$count))
sd <- c(sd(df1[df1$group == 1, ]$count), sd(df1[df1$group == 2, ]$count))
group <- c(1,2)
cbind(group, mean, median, sd)
AllData$duration
i <- 1
days <- 1:maxday[i]
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
View(subset)
minday <- min(subset$day)
days <- minday:maxday[i]
for (dd in days){
count <- sum(subset[subset$day == dd, ]$seizure)
duration <- mean(subset[subset$day == dd, ]$duration)
}
data.frame(ids = rep(ids[i], maxday[i]), day = days, count = count, duration = duration)
data.frame(ids = rep(ids[i], length(days)), day = days, count = count, duration = duration)
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
subset[subset$day == dd, ]$seizure
subset[subset$day == dd, ]$duration
51+68
119/2
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
minday <- min(subset$day)
days <- minday:maxday[i]
count <- c()
duration <- c()
for (dd in days){
count[dd] <- sum(subset[subset$day == dd, ]$seizure)
duration[dd] <- mean(subset[subset$day == dd, ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], length(days)), day = days, count = count, duration = duration))
}
i <- 1
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
minday <- min(subset$day)
days <- minday:maxday[i]
count <- c()
duration <- c()
for (dd in days){
count[dd] <- sum(subset[subset$day == dd, ]$seizure)
duration[dd] <- mean(subset[subset$day == dd, ]$duration)
}
count
days
count <- c()
duration <- c()
for (dd in 1:length(days)){
count[dd] <- sum(subset[subset$day == days[dd], ]$seizure)
duration[dd] <- mean(subset[subset$day == days[dd], ]$duration)
}
count
duration
data.frame(ids = rep(ids[i], length(days)), day = days, count = count, duration = duration)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
options(digits = 2)
# load libraries
library(dplyr)
library(MASS)
library(ggplot2)
library(lme4)
library(readxl)
AllData <- read_excel("ip3r2vswt_matrix_150121_woexcl_onlyrealseizures.xlsx")
ids <- AllData[!duplicated(AllData$ID), ]$ID
maxday <- group <- cohort <- c()
GSneuroscore <- durfirstbout <- spiketrain <- spikeneuroscore <- gamma <- c()
lengthacute <- nacute <- lengthlatent <- lengthchronic <- nchronic <- c()
status <- c()
for ( i in ids){
subset <- AllData[AllData$ID == i, ]
maxday[i] <- max(subset$day)
group[i] <- mean(subset$group)
cohort[i] <- mean(subset$cohorte)
GSneuroscore[i] <- mean(subset$`GS  neuroscore 1 hr`)
durfirstbout[i] <- mean(subset$`duration first bout (hrs)`)
spiketrain[i] <- mean(subset$`spike train duration during 1 hr neuroscore (min)`)
spikeneuroscore[i] <- mean(subset$`spikes neuroscore 6 hrs`)
gamma[i] <- mean(subset$`normalized gamma power 6 hrs`)
lengthacute[i] <- max(subset$`duration acute period (days)`, na.rm = TRUE)
nacute[i] <- max(subset$`nr seizures acute`, na.rm = TRUE)
lengthlatent[i] <- max(subset$`duration latent period`, na.rm = TRUE)
lengthchronic[i] <- max(subset$`duration chronic period`, na.rm =TRUE)
nchronic[i] <- max(subset$`nr seizures chronic`, na.rm = TRUE)
status[i] <- max(subset$`death during seizure`, na.rm = TRUE)
}
summarydata <- data.frame(ids, maxday, group, cohort,
GSneuroscore, durfirstbout, spiketrain, spikeneuroscore, gamma,
lengthacute, nacute, lengthlatent, lengthchronic, nchronic,
status)
AllData$duration <- as.numeric(AllData$`duration (seconds)`)
x <-  data.frame(id = c(), day = c(), count = c(), duration = c())
for (i in 1:length(ids)){
subset <- AllData[AllData$ID == ids[i], ]
subset <- subset[subset$phase == 'chronic', ]
minday <- min(subset$day)
days <- minday:maxday[i]
count <- c()
duration <- c()
for (dd in 1:length(days)){
count[dd] <- sum(subset[subset$day == days[dd], ]$seizure)
duration[dd] <- mean(subset[subset$day == days[dd], ]$duration)
}
x <- rbind(x, data.frame(ids = rep(ids[i], length(days)), day = days, count = count, duration = duration))
}
df <- merge(summarydata, x, by = 'ids')
df$group <- as.factor(df$group)
ggplot(df, aes(count, fill = group)) +
geom_histogram(binwidth=.5, position="dodge")+
labs(title="Seizures per day in chronic phase",x="seizures per day", y = "")
modelfreq <- glmer(formula = count ~ group + duration + (1|ids),
family="poisson", data=df)
summary(modelfreq)
modelfreq <- glmer(formula = count ~ group + duration + (1|ids),
family="poisson", data=df)
summary(modelfreq)
```{r}
model.full <- glmer(formula = seizperday ~  group + scale(GS) + scale(dur.first) +
scale(gamma) + scale(spike.train) + scale(spike.neuro) + (1|ID)+ (1|cohort),
family="poisson", data=DataSeizures.full)
model.full <- glmer(formula = seizperday ~  group + scale(GS) + scale(dur.first) +
scale(gamma) + scale(spike.train) + scale(spike.neuro) + (1|ID)+ (1|cohort),
family="poisson", data=df)
names(df)
modelfreq <- glmer(formula = count ~ group + duration + (1|ids) +(1|cohort),
family="poisson", data=df)
summary(modelfreq)
model.full <- glmer(formula = count ~  group + scale(GSneuroscore) + scale(durfirstbout) +
scale(gamma) + scale(spiketrain) + scale(spikeneuroscore) + (1|ids)+ (1|cohort),
family="poisson", data=df)
summary(model.full)
names(df)
model.phases <- glmer(formula = count ~  group + lengthacute +
nacute + (1|ids)+ (1|cohort),
family="poisson", data=df)
summary(model.phases)
df$logduration <- log(df$duration)
df$logduration <- log(df$duration)
modelDuration <- lmer(logduration ~ group + count  + (1|ids) + (1|cohort),
data = df)
summary(modelDuration)
ctable <- coef(summary(modelDuration))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
cbind(ctable, "p value" = p)
ctable <- coef(summary(modelDuration))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
cbind(ctable, "p value" = p)
model.full <- lmer(formula = logduration ~  group + count + + scale(GSneuroscore) + scale(durfirstbout) +
scale(gamma) + scale(spiketrain) + scale(spikeneuroscore) + (1|ids)+ (1|cohort),
data=df)
summary(model.full)
ctable <- coef(summary(model.full))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
cbind(ctable, "p value" = p)
model.phases <- lmer(formula = logduration ~  group + count + lengthacute +
nacute  + (1|ids) + (1|cohort),
data=df)
summary(model.phases)
ctable <- coef(summary(model.phases))
p <- pnorm(abs(ctable[, "t value"]), lower.tail = FALSE) * 2
cbind(ctable, "p value" = p)
library(survival)
library(survminer)
surv_object <- Surv(time = df$maxday, event = df$status)
survmodel <- survfit(surv_object ~ group, data = DataSurv)
library(survival)
library(survminer)
surv_object <- Surv(time = df$maxday, event = df$status)
survmodel <- survfit(surv_object ~ group, data = df)
summary(survmodel)
ggsurvplot(survmodel, data = df, pval = TRUE)
write.csv(df, file = 'DataForAnalysisErica.csv')
write.csv(df, file = 'DataForAnalysisErica.csv')
library(devtools)
library(roxygen2)
setwd("C:/Users/ericapo/Documents/GitHub/")
devtools::create("RaJIVE")
usethis::create_package("RaJIVE")
setwd("C:/Users/ericapo/Documents/GitHub/")
devtools::install("RaJIVE")
library("RaJIVE")
?RaJIVE
?Rajive
packageDescription(RaJIVE)
packageDescription("RaJIVE")
build("RaJIVE")
build("RaJIVE")
build("RaJIVE")
devtools::check("RaJIVE")
devtools::check("RaJIVE")
setwd("C:/Users/ericapo/Documents/GitHub/")
usethis::create_package("RaJIVE")
setwd("./RaJIVE/")
devtools::document()
setwd("C:/Users/ericapo/Documents/GitHub/")
devtools::install("RaJIVE")
library("RaJIVE")
devtools::check("RaJIVE")
build("RaJIVE")
setwd("C:/Users/ericapo/Documents/GitHub/")
usethis::create_package("RaJIVE")
setwd("C:/Users/ericapo/Documents/GitHub/")
devtools::install("RaJIVE")
devtools::check("RaJIVE")
build("RaJIVE")
library(devtools)
library(roxygen2)
usethis::create_package("RaJIVE")
devtools::check("RaJIVE")
usethis::create_package("RaJIVE")
devtools::check("RaJIVE")
build("RaJIVE")
